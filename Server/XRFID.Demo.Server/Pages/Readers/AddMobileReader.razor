@page "/Readers/Add"
@using System.Text.RegularExpressions;
@using System.ComponentModel.DataAnnotations;
@using XRFID.Demo.Server.Database;
@using XRFID.Demo.Server.Entities;
@using XRFID.Demo.Server.Repositories;
@using XRFID.Demo.Server.ViewModels;
@inject NavigationManager Navigation;
@inject ReaderRepository readerRepository;
@inject UnitOfWork uow;
@inject ISnackbar snackbar;

<h1>Add New Reader</h1>

<MudForm @ref="form" @bind-IsValid="@success" @bind-Errors="@errors">
    <MudStack Class="my-3">
        <MudTextField T="string" Variant="Variant.Outlined" Required="true" OnlyValidateIfDirty="true" Label="Device Id" For="()=>model.Id" @bind-Value="model.Id" HelperText="GUID in format: 00000000-aaaa-ffff-AAAA-0123456789FA" />
        <MudTextField T="string" Variant="Variant.Outlined" Required="true" OnlyValidateIfDirty="true" Label="Device Name" For="()=>model.Hostname" @bind-Value="model.Hostname" />

        <MudStack Row="true" Class="my-6 d-flex justify-end">
            <MudButton OnClick="@(()=>form.ResetAsync())" Variant="Variant.Outlined" Color="Color.Default" Class="ml-3">Reset</MudButton>
            <MudButton OnClick="@(async ()=> await Submit())" Variant="Variant.Filled" Color="Color.Secondary" Class="ml-3">Submit</MudButton>
        </MudStack>
    </MudStack>
</MudForm>


@code {
    bool success;
    string[] errors = { };
    MudForm form;
    private AddMobileReaderModel model = new AddMobileReaderModel();

    // protected override async Task OnInitializedAsync()
    // {

    // }

    private async Task Submit()
    {
        await form.Validate();

        if (!form.IsValid)
        {
            return;
        }
        Guid readerId = Guid.Parse(model.Id);

        if (await readerRepository.GetAsync(readerId) is not null)
        {
            snackbar.Add($"Reader with same ID already exists.", MudBlazor.Severity.Error);
            await form.ResetAsync();
            return;
        }
        await readerRepository.CreateAsync(new Reader { Id = readerId, Name = model.Hostname });
        await uow.SaveAsync();

        snackbar.Add($"Reader {model.Hostname} created.", MudBlazor.Severity.Success);

        Navigation.NavigateTo($"Readers");

        StateHasChanged();
    }

}
